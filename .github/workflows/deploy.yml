name: Deploy to AWS
on:
  push:
    branches:
      - main
    paths:
      - 'main.tf'
      - 'cloudresume.html'
      - 'cloudresume.js'
      - 'cloudresume.css'
      - '.github/workflows/deploy.yml'
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Configure AWS Credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::442426863782:role/GitHubActionsProdRole
        aws-region: us-east-1
        role-session-name: GitHubActionsSession
    - name: Debug AWS Credentials
      run: |
        echo "AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:0:10}..."
        echo "AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:0:10}..."
        echo "AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN:0:10}..."
        aws sts get-caller-identity || echo "Failed to get caller identity"
        echo "Action outputs: ${{ toJson(steps.creds.outputs) }}"
        aws configure list
        echo "Environment variables:"
        env | grep AWS_
        echo "GitHub Repository: $GITHUB_REPOSITORY"
      env:
        AWS_ACCESS_KEY_ID: ${{ steps.creds.outputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ steps.creds.outputs.aws-secret-access-key }}
        AWS_SESSION_TOKEN: ${{ steps.creds.outputs.aws-session-token }}
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.0
    - name: Terraform Init
      env:
        AWS_ACCESS_KEY_ID: ${{ steps.creds.outputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ steps.creds.outputs.aws-secret-access-key }}
        AWS_SESSION_TOKEN: ${{ steps.creds.outputs.aws-session-token }}
        TF_LOG: TRACE
      run: terraform init -reconfigure
    - name: Terraform Apply
      env:
        AWS_ACCESS_KEY_ID: ${{ steps.creds.outputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ steps.creds.outputs.aws-secret-access-key }}
        AWS_SESSION_TOKEN: ${{ steps.creds.outputs.aws-session-token }}
      run: terraform apply -auto-approve
    - name: Upload static files to S3
      run: |
        aws s3 cp cloudresume.html s3://trison-cloud-resume-prod-mjcsikwf/cloudresume.html
        aws s3 cp cloudresume.js s3://trison-cloud-resume-prod-mjcsikwf/cloudresume.js
        aws s3 cp cloudresume.css s3://trison-cloud-resume-prod-mjcsikwf/cloudresume.css
    - name: Create CloudFront Invalidation
      run: |
        aws cloudfront create-invalidation --distribution-id E1Z7J2MV57SJA1 --paths "/*"
